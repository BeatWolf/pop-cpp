#include "pop_xmp_object_broker.h"

#include "paroc_combox.h"
#include "paroc_buffer.h"
#include "paroc_exception.h"
#include "pop_xmp_object.h"


// Generated by the compiler 


bool POPXMPObject_popcobject_Broker::Invoke(unsigned method[3], paroc_buffer &__brokerbuf, paroc_connection *peer)
{
  if (*method == CLASSUID_POPXMPObject) {
    switch(method[1]) {
      case 10: Invoke_POPXMPObject_10(__brokerbuf, peer); 
        return true;
      case 12: Invoke_execute_xmp_1_12(__brokerbuf, peer); 
        return true;
      case 13: Invoke_set_value_13(__brokerbuf, peer); 
        return true;
      default: return false;
    }
  }
  return POPC_GroupBroker::invoke(method,__brokerbuf,peer);
}

POPXMPObject_popcobject_Broker::POPXMPObject_popcobject_Broker()
{
  static popc_method_info _popc_minfo[3] = { {10,(char*)"POPXMPObject"}, {12,(char*)"execute_xmp_1"}, {13,(char*)"set_value"} };
  add_method_info(CLASSUID_POPXMPObject, _popc_minfo, 3);
}

void POPXMPObject_popcobject_Broker::Invoke_POPXMPObject_10(paroc_buffer &__paroc_buf, paroc_connection *__interface_output)
{
  try {
    //object = new POPXMPObject_popcobject();
  } catch(std::exception& e) {
    printf("POP-C++ Warning: Exception '%s' raised in method 'POPXMPObject' of class 'POPXMPObject'\n",e.what()); 
    throw;
  }
  if (__interface_output!=0) {
    __paroc_buf.Reset();
    paroc_message_header __paroc_buf_header("POPXMPObject");
    __paroc_buf.SetHeader(__paroc_buf_header);

    if (!__paroc_buf.Send(__interface_output)) 
      paroc_exception::paroc_throw_errno();
  }

  if(__interface_output != 0)
    __interface_output->reset();
}



void POPXMPObject_popcobject_Broker::Invoke_execute_xmp_1_12(paroc_buffer &__paroc_buf, paroc_connection *__interface_output)
{
  POPXMPObject_popcobject * _popc_object = dynamic_cast<POPXMPObject_popcobject *>(object);
  try {
    _popc_object->execute_xmp_1();
  } catch(std::exception& e) {
    printf("POP-C++ Warning: Exception '%s' raised in method 'execute_xmp_1' of class 'POPXMPObject'\n",e.what()); 
    throw;
  }
  
  if (__interface_output != 0)  {
    __paroc_buf.Reset();
    paroc_message_header __paroc_buf_header("execute_xmp_1");
    __paroc_buf.SetHeader(__paroc_buf_header);

    if (!__paroc_buf.Send(__interface_output)) 
      paroc_exception::paroc_throw_errno();
  }

  if(__interface_output != 0)
    __interface_output->reset();
  }

// Generate method set_value
void POPXMPObject_popcobject_Broker::Invoke_set_value_13(paroc_buffer &__paroc_buf, paroc_connection *__interface_output)
{
  int val;
  __paroc_buf.Push("val","int", 1);
  __paroc_buf.UnPack(&val,1);
  __paroc_buf.Pop();

  POPXMPObject_popcobject * _popc_object = dynamic_cast<POPXMPObject_popcobject *>(object);
  try {
    _popc_object->set_value(val);
  }
  catch(std::exception& e) {printf("POP-C++ Warning: Exception '%s' raised in method 'set_value' of class 'POPXMPObject'\n",e.what()); throw;}
  if (__interface_output!=0) 
  {
    __paroc_buf.Reset();
    paroc_message_header __paroc_buf_header("set_value");
    __paroc_buf.SetHeader(__paroc_buf_header);

    if (!__paroc_buf.Send(__interface_output)) 
      paroc_exception::paroc_throw_errno();
  }

  if(__interface_output != 0)
    __interface_output->reset();
}

POPC_GroupBroker* POPXMPObject_popcobject_Broker::_init() { return new POPXMPObject_popcobject_Broker; }
//paroc_broker_factory POPXMPObject_popcobject_Broker::_fact(_init, "POPXMPObject");