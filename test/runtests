#!/bin/bash 

UNAMESTR=$(uname)
LINUXSTR="Linux"
MACOSXSTR="Darwin"

TESTLIST_LINUX=$(ls -F -d * | grep -v tests_results | grep -v Makefile | grep -v jobManager | grep -v runtests | grep -v runtests_short | grep -v stressallocation | grep -v stresstest | grep -v bigdata)
TESTLIST_MAC=$(ls -F -d * | grep -v tests_results | grep -v Makefile | grep -v jobManager | grep -w -v heritage | grep -v runtests | grep -v runtests_short | grep -v stressallocation | grep -v stresstest | grep -v bigdata | grep -v xmp4)

if [ $UNAMESTR == $LINUXSTR ]
then 
  echo "Platform: Linux"
  TESTLIST=$TESTLIST_LINUX
elif [ $UNAMESTR == $MACOSXSTR ]
then 
  echo "Platform: Mac OS X"
  TESTLIST="$TESTLIST_MAC"
fi

RESULTS=tests_results
NUMBEROFTEST=0
NUMBEROFSUCCESS=0

if [ "x$POPC_LOCATION" = "x" ]
then 
  POPC_LOCATION=/usr/local/popc
  export POPC_LOCATION
fi

if [ "x$POPC_INTERCONNECTOR" = "x" ]
then 
  POPC_INTERCONNECTOR=$POPC_LOCATION/mpi/popc_mpi_interconnector
  export POPC_INTERCONNECTOR
fi

if [ "x$POPC_MPIMANAGER" = "x" ]
then 
  POPC_MPIMANAGER=$POPC_LOCATION/mpi/popc_resource_manager_mpi
  export POPC_MPIMANAGER
fi

if [ "$1" = "-all" ]
then
  echo ""
  echo Starting test suite...
  echo ""
  rm -rf $RESULTS
  for TEST in $TESTLIST 
  do
    echo "---------------------------------------------------------------------------"
    echo "*** $TEST test ($NUMBEROFTEST) **"
    echo "---------------------------------------------------------------------------"
    cd $TEST
    rm -rf $RESULTS
    ((NUMBEROFTEST++))
    make clean
    make 
    make run
    RETURNVALUE=$?
    if [ x$RETURNVALUE = "x0" ]
    then 
      echo "$NUMBEROFTEST:  $TEST succeed" >> ../$RESULTS
      ((NUMBEROFSUCCESS++))
    else 
      echo "$NUMBEROFTEST:  $TEST failed" >> ../$RESULTS			
    fi
    make clean
    cd ..
    echo ""
  done
  echo "---------------------------------------------------------------------------"
  echo "*** TEST SUITE COMPLETED: RESULTS ARE SHOWN BELOW ***"
  echo "---------------------------------------------------------------------------"
  cat $RESULTS
  echo "$NUMBEROFSUCCESS succeed on $NUMBEROFTEST"
  if [ "$NUMBEROFSUCCESS" = "$NUMBEROFTEST" ]
  then
    echo "ALL TESTS SUCCEED! You are ready to use POP-C++!"
  else
    echo "Some test cases failed ! Check your installation and configuration ... Did you set your environement variables ?"
  fi
  rm -rf $RESULTS
else
  if [ "$1" = "-h" ] || [ "$1" = "--help" ] || [ -z "$1" ]
  then
    echo ""
    echo "usage : ./runtests <parameter>"
    echo ""
    echo "with parameter :"
    echo ""
    echo "-h  or  --help  : displays this help message"
    echo "-all            : launches all tests at once"
    echo ""
    echo "    one of the following test name :"
    echo ""
    echo "barrier, callback, classparam, constparam, exception, heritage, heritageparam1,"
    echo "heritageparam2, jobManager, matrixNB, method, param, passparam, serialize_vect,"
    echo "structparam, templateparam, tree, vertorint1, vectorint2, vectorx"
    echo ""
    echo "                : will launch the specific test"
    echo ""
    exit
  else
    if [ -d $1 ]
    then
      cd $1
      echo ""
      echo "Start of \"$1\" test"
      echo ""
      make clean
      make
      echo "---------------------------------------------------------------------------"
      echo "*** $1 test ***"
      echo "---------------------------------------------------------------------------"
      make run
      make clean
      cd ..
      echo ""
      echo "End of \"$1\" test"
    else
      echo ""
      echo "The test \"$1\" does not exist !!"
      echo ""
      ./runtests1 -h
			
    fi
  fi
fi

