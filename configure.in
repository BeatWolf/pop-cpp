#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.57)

#AC_CONFIG_SRCDIR([lex.yy.cc])
#AC_CONFIG_HEADER([config.h])

# Checks for programs.
AC_INIT( popc, 1.1)
AM_INIT_AUTOMAKE(no-dependencies)

AC_CANONICAL_HOST

AC_LANG(C++)

AC_SUBST(host)
AC_SUBST(host_os)
AC_SUBST(host_vendor)
AC_SUBST(host_os)

AC_ARG_ENABLE(globus,
[ --enable-globus=flavor  Enable Globus-support in POP-C++],
[
test -n "${GLOBUS_LOCATION}" || AC_MSG_ERROR(GLOBUS_LOCATION environment variable not found); \
globusdir=${GLOBUS_LOCATION}; \
globusflavor="${enableval}"; \
test -n "$globusflavor" || globusflavor="gcc32dbg"; \
globus=true;
], [ globus=false])

AM_CONDITIONAL(GLOBUS, test x$globus = xtrue)
test x$globus = xfalse || AC_SUBST(globusdir)
test x$globus = xfalse || AC_SUBST(globusflavor)

echo '#buffer metrics' >  modules/paroc_buffer.map
echo "${prefix}/lib/plugins/paroc_raw-zlib.so 5 " >>  modules/paroc_buffer.map
echo "${prefix}/lib/plugins/paroc_xdr-zlib.so 6 " >>  modules/paroc_buffer.map

AC_ARG_ENABLE(xml,
[ --enable-xml  Enable XML encoding in POP-C++],
[
xml=true; 
], [ xml=false])

AM_CONDITIONAL(XMLBUILD, test x$xml = xtrue)

test "x${xml}" = "xfalse" || (echo "${prefix}/lib/plugins/paroc_buffer_xml.so 10" >> modules/paroc_combox.map)




echo '#protocol metrics' >  modules/paroc_combox.map

AC_ARG_ENABLE(myrinet,
[ --enable-myrinet  Enable GM/Myrinet communication protocol in POP-C++],
[
gm=true;
], [ gm=false])

AM_CONDITIONAL(GMBUILD, test x$gm = xtrue)

test x$gm = xfalse || (echo "${prefix}/lib/plugins/paroc_combox_gm.so 9" >> modules/paroc_combox.map)

AC_ARG_ENABLE(http,
[ --enable-http  Enable HTTP communication protocol in POP-C++(default)],
[
http=true;
], [ http=false])

AM_CONDITIONAL(HTTPBUILD, test x$http = xtrue)

test x$http = xfalse || (echo "${prefix}/lib/plugins/paroc_combox_http.so 11" >> modules/paroc_combox.map)

AC_ARG_ENABLE(mpi,
[ --enable-mpi  Enable POP-C++ support for MPI (default)],
[
mpi=true;
], [ mpi=false])

AM_CONDITIONAL(MPISUPPORT, test x$mpi = xtrue)

case $host in 
*-linux*) linux=true ;;
esac

AM_CONDITIONAL(LINUX, test x${linux} = xtrue)


AC_PROG_YACC
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CXXCPP
AC_PROG_LEX
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_LIBTOOL

# Checks for libraries.
AC_CHECK_LIB(pthread, pthread_create)
AC_CHECK_LIB(nsl, gethostbyname)
AC_CHECK_LIB(socket, socket)
AC_CHECK_LIB(dl, dlopen)

AC_CHECK_TYPE(socklen_t)

AC_MSG_CHECKING([dynamic linking executable])
LDFLAGSOLD="$LDFLAGS"
LDFLAGS="$LDFLAGSOLD -rdynamic"

AC_LINK_IFELSE( 
[AC_LANG_PROGRAM([[const char hw[] = "Hello, World\n";]])],
[AC_MSG_RESULT([yes]);AC_DEFINE([PAROC_EXTRA_LINK],["-rdynamic"],[Dynamic exec])], 
[ LDFLAGS="$LDFLAGSOLD -export-dynamic";\
  AC_LINK_IFELSE(
   [AC_LANG_PROGRAM([[const char hw[] = "Hello, World\n";]])],
   [AC_MSG_RESULT([yes]); AC_DEFINE([PAROC_EXTRA_LINK],["-export-dynamic"],[Dynamic exec])], 
   [AC_MSG_RESULT([no]); LDFLAGS="$LDFLAGSOLD" ])]
)

LDFLAGS=$LDFLAGSOLD

#LDFLAGS="$LDFLAGSOLD"

#AC_SEARCH_LIBS(gethostbyname, -lnsl -lsocket)
#AC_SEARCH_LIBS(socket, -lnsl -lsocket)


# Checks for header files.
#AC_HEADER_STDC
#AC_HEADER_SYS_WAIT

# Checks for typedefs, structures, and compiler characteristics.
#AC_HEADER_STDBOOL
#AC_C_CONST
#AC_C_INLINE
#AC_TYPE_SIZE_T
#AC_HEADER_TIME

# Checks for library functions.
#AC_FUNC_FORK
#AC_FUNC_MALLOC
#AC_FUNC_MEMCMP
#AC_FUNC_REALLOC
#AC_TYPE_SIGNAL
#AC_FUNC_STAT
#AC_FUNC_VPRINTF

#AC_CHECK_FUNCS(alarm dup2 getcwd gethostbyname gethostname gettimeofday memset mkdir putenv socket strchr strdup strerror strrchr strstr sysinfo)

AC_SUBST(LIBS)

AC_PREFIX_DEFAULT(/usr/local/popc)

AC_CONFIG_LINKS(parser/debug.cc:lib/debug.cc parser/utils.cc:lib/utils.cc)
AC_CONFIG_LINKS(include/jobmgr.ph:lib/jobmgr.ph include/codemgr.ph:lib/codemgr.ph)
AC_CONFIG_LINKS(include/remotelog.ph:lib/remotelog.ph include/appservice.ph:lib/appservice.ph)
AC_CONFIG_LINKS(include/objectmonitor.ph:lib/objectmonitor.ph include/proxy.ph:lib/proxy.ph)
AC_CONFIG_LINKS(include/paroc_service_base.ph:lib/paroc_service_base.ph)

AC_CONFIG_HEADER(config.h)
AC_CONFIG_FILES([parser/parocc.cc])
#AC_CONFIG_FILES([parocc], [chmod +x parocc])
AC_CONFIG_FILES([scripts/parocrun], [chmod +x scripts/parocrun])
AC_CONFIG_FILES([scripts/parocrun.globus], [chmod +x scripts/parocrun.globus])
AC_CONFIG_FILES([scripts/paroc-user-env.sh], [chmod +x scripts/paroc-user-env.sh])
AC_CONFIG_FILES([scripts/paroc-runtime-env.in], [chmod +x scripts/paroc-runtime-env.in])
AC_CONFIG_FILES([scripts/paroc-user-env.csh], [chmod +x scripts/paroc-user-env.csh])
AC_CONFIG_FILES([scripts/paroc_setup], [chmod +x scripts/paroc_setup])
AC_CONFIG_FILES([scripts/paroc_script_setup], [chmod +x scripts/paroc_script_setup])

AC_CONFIG_FILES(Makefile scripts/Makefile parser/Makefile include/Makefile lib/Makefile services/Makefile mpi/Makefile)
AC_CONFIG_FILES(model/Makefile)
AC_CONFIG_FILES(modules/Makefile modules/raw-zlib/Makefile  modules/xdr-zlib/Makefile modules/xml/Makefile)
AC_CONFIG_FILES(modules/http/Makefile modules/gm/Makefile)
AC_CONFIG_FILES(test/Makefile)
AC_CONFIG_FILES(test/method/Makefile test/tree/Makefile test/pingpong/Makefile test/integer/Makefile test/matrix/Makefile test/bag/Makefile)

test x$globus = xfalse  || AC_CONFIG_FILES(services/globus_header)

AC_OUTPUT
