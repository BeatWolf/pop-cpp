# Makefile.in generated by automake 1.9.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

SOURCES = $(nodist_parocc_SOURCES) $(parocpp_SOURCES) $(nodist_parocpp_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = parocpp$(EXEEXT) parocc$(EXEEXT)
subdir = parser
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/parocc.cc.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = parocc.cc debug.cc utils.cc
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
nodist_parocc_OBJECTS = parocc-parocc.$(OBJEXT) parocc-utils.$(OBJEXT)
parocc_OBJECTS = $(nodist_parocc_OBJECTS)
parocc_LDADD = $(LDADD)
am_parocpp_OBJECTS = parocpp-parser.$(OBJEXT) \
	parocpp-parser_common.$(OBJEXT) parocpp-codefile.$(OBJEXT) \
	parocpp-othercode.$(OBJEXT) parocpp-classmember.$(OBJEXT) \
	parocpp-class.$(OBJEXT) parocpp-packobject.$(OBJEXT) \
	parocpp-parser.tab.$(OBJEXT) parocpp-parser.yy.$(OBJEXT) \
	parocpp-typearray.$(OBJEXT) parocpp-type.$(OBJEXT) \
	parocpp-typeequal.$(OBJEXT) parocpp-typeptr.$(OBJEXT) \
	parocpp-typestruct.$(OBJEXT) parocpp-typeseqclass.$(OBJEXT)
nodist_parocpp_OBJECTS = parocpp-debug.$(OBJEXT) \
	parocpp-utils.$(OBJEXT)
parocpp_OBJECTS = $(am_parocpp_OBJECTS) $(nodist_parocpp_OBJECTS)
parocpp_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp =
am__depfiles_maybe =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link --tag=CC $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(nodist_parocc_SOURCES) $(parocpp_SOURCES) \
	$(nodist_parocpp_SOURCES)
DIST_SOURCES = $(parocpp_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GLOBUS_FALSE = @GLOBUS_FALSE@
GLOBUS_TRUE = @GLOBUS_TRUE@
GMBUILD_FALSE = @GMBUILD_FALSE@
GMBUILD_TRUE = @GMBUILD_TRUE@
HTTPBUILD_FALSE = @HTTPBUILD_FALSE@
HTTPBUILD_TRUE = @HTTPBUILD_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LINUX_FALSE = @LINUX_FALSE@
LINUX_TRUE = @LINUX_TRUE@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MPISUPPORT_FALSE = @MPISUPPORT_FALSE@
MPISUPPORT_TRUE = @MPISUPPORT_TRUE@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
XMLBUILD_FALSE = @XMLBUILD_FALSE@
XMLBUILD_TRUE = @XMLBUILD_TRUE@
YACC = @YACC@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
globusdir = @globusdir@
globusflavor = @globusflavor@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
AUTOMAKE_OPTIONS = no-dependencies
parocpp_SOURCES = parser.cc parser_common.cc parser_common.h codefile.cc othercode.cc classmember.cc class.cc packobject.cc \
 parser.tab.cc parser.yy.cc parser.h parser.tab.h parser_common.h type.h\
typearray.cc  type.cc  typeequal.cc  typeptr.cc  typestruct.cc typeseqclass.cc

nodist_parocpp_SOURCES = debug.cc  utils.cc 
parocpp_LDADD = @LEXLIB@
parocpp_CCFLAGS = -I../include
parocpp_CXXFLAGS = -I../include
nodist_parocc_SOURCES = parocc.cc utils.cc
parocc_CCFLAGS = -I../include
parocc_CXXFLAGS = -I../include
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  --ignore-deps parser/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  --ignore-deps parser/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
parocc.cc: $(top_builddir)/config.status $(srcdir)/parocc.cc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
parocc$(EXEEXT): $(parocc_OBJECTS) $(parocc_DEPENDENCIES) 
	@rm -f parocc$(EXEEXT)
	$(CXXLINK) $(parocc_LDFLAGS) $(parocc_OBJECTS) $(parocc_LDADD) $(LIBS)
parocpp$(EXEEXT): $(parocpp_OBJECTS) $(parocpp_DEPENDENCIES) 
	@rm -f parocpp$(EXEEXT)
	$(CXXLINK) $(parocpp_LDFLAGS) $(parocpp_OBJECTS) $(parocpp_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.cc.o:
	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -c -o $@ $<

parocc-parocc.o: parocc.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocc_CXXFLAGS) $(CXXFLAGS) -c -o parocc-parocc.o `test -f 'parocc.cc' || echo '$(srcdir)/'`parocc.cc

parocc-parocc.obj: parocc.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocc_CXXFLAGS) $(CXXFLAGS) -c -o parocc-parocc.obj `if test -f 'parocc.cc'; then $(CYGPATH_W) 'parocc.cc'; else $(CYGPATH_W) '$(srcdir)/parocc.cc'; fi`

parocc-utils.o: utils.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocc_CXXFLAGS) $(CXXFLAGS) -c -o parocc-utils.o `test -f 'utils.cc' || echo '$(srcdir)/'`utils.cc

parocc-utils.obj: utils.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocc_CXXFLAGS) $(CXXFLAGS) -c -o parocc-utils.obj `if test -f 'utils.cc'; then $(CYGPATH_W) 'utils.cc'; else $(CYGPATH_W) '$(srcdir)/utils.cc'; fi`

parocpp-parser.o: parser.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-parser.o `test -f 'parser.cc' || echo '$(srcdir)/'`parser.cc

parocpp-parser.obj: parser.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-parser.obj `if test -f 'parser.cc'; then $(CYGPATH_W) 'parser.cc'; else $(CYGPATH_W) '$(srcdir)/parser.cc'; fi`

parocpp-parser_common.o: parser_common.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-parser_common.o `test -f 'parser_common.cc' || echo '$(srcdir)/'`parser_common.cc

parocpp-parser_common.obj: parser_common.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-parser_common.obj `if test -f 'parser_common.cc'; then $(CYGPATH_W) 'parser_common.cc'; else $(CYGPATH_W) '$(srcdir)/parser_common.cc'; fi`

parocpp-codefile.o: codefile.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-codefile.o `test -f 'codefile.cc' || echo '$(srcdir)/'`codefile.cc

parocpp-codefile.obj: codefile.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-codefile.obj `if test -f 'codefile.cc'; then $(CYGPATH_W) 'codefile.cc'; else $(CYGPATH_W) '$(srcdir)/codefile.cc'; fi`

parocpp-othercode.o: othercode.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-othercode.o `test -f 'othercode.cc' || echo '$(srcdir)/'`othercode.cc

parocpp-othercode.obj: othercode.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-othercode.obj `if test -f 'othercode.cc'; then $(CYGPATH_W) 'othercode.cc'; else $(CYGPATH_W) '$(srcdir)/othercode.cc'; fi`

parocpp-classmember.o: classmember.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-classmember.o `test -f 'classmember.cc' || echo '$(srcdir)/'`classmember.cc

parocpp-classmember.obj: classmember.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-classmember.obj `if test -f 'classmember.cc'; then $(CYGPATH_W) 'classmember.cc'; else $(CYGPATH_W) '$(srcdir)/classmember.cc'; fi`

parocpp-class.o: class.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-class.o `test -f 'class.cc' || echo '$(srcdir)/'`class.cc

parocpp-class.obj: class.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-class.obj `if test -f 'class.cc'; then $(CYGPATH_W) 'class.cc'; else $(CYGPATH_W) '$(srcdir)/class.cc'; fi`

parocpp-packobject.o: packobject.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-packobject.o `test -f 'packobject.cc' || echo '$(srcdir)/'`packobject.cc

parocpp-packobject.obj: packobject.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-packobject.obj `if test -f 'packobject.cc'; then $(CYGPATH_W) 'packobject.cc'; else $(CYGPATH_W) '$(srcdir)/packobject.cc'; fi`

parocpp-parser.tab.o: parser.tab.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-parser.tab.o `test -f 'parser.tab.cc' || echo '$(srcdir)/'`parser.tab.cc

parocpp-parser.tab.obj: parser.tab.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-parser.tab.obj `if test -f 'parser.tab.cc'; then $(CYGPATH_W) 'parser.tab.cc'; else $(CYGPATH_W) '$(srcdir)/parser.tab.cc'; fi`

parocpp-parser.yy.o: parser.yy.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-parser.yy.o `test -f 'parser.yy.cc' || echo '$(srcdir)/'`parser.yy.cc

parocpp-parser.yy.obj: parser.yy.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-parser.yy.obj `if test -f 'parser.yy.cc'; then $(CYGPATH_W) 'parser.yy.cc'; else $(CYGPATH_W) '$(srcdir)/parser.yy.cc'; fi`

parocpp-typearray.o: typearray.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-typearray.o `test -f 'typearray.cc' || echo '$(srcdir)/'`typearray.cc

parocpp-typearray.obj: typearray.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-typearray.obj `if test -f 'typearray.cc'; then $(CYGPATH_W) 'typearray.cc'; else $(CYGPATH_W) '$(srcdir)/typearray.cc'; fi`

parocpp-type.o: type.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-type.o `test -f 'type.cc' || echo '$(srcdir)/'`type.cc

parocpp-type.obj: type.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-type.obj `if test -f 'type.cc'; then $(CYGPATH_W) 'type.cc'; else $(CYGPATH_W) '$(srcdir)/type.cc'; fi`

parocpp-typeequal.o: typeequal.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-typeequal.o `test -f 'typeequal.cc' || echo '$(srcdir)/'`typeequal.cc

parocpp-typeequal.obj: typeequal.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-typeequal.obj `if test -f 'typeequal.cc'; then $(CYGPATH_W) 'typeequal.cc'; else $(CYGPATH_W) '$(srcdir)/typeequal.cc'; fi`

parocpp-typeptr.o: typeptr.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-typeptr.o `test -f 'typeptr.cc' || echo '$(srcdir)/'`typeptr.cc

parocpp-typeptr.obj: typeptr.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-typeptr.obj `if test -f 'typeptr.cc'; then $(CYGPATH_W) 'typeptr.cc'; else $(CYGPATH_W) '$(srcdir)/typeptr.cc'; fi`

parocpp-typestruct.o: typestruct.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-typestruct.o `test -f 'typestruct.cc' || echo '$(srcdir)/'`typestruct.cc

parocpp-typestruct.obj: typestruct.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-typestruct.obj `if test -f 'typestruct.cc'; then $(CYGPATH_W) 'typestruct.cc'; else $(CYGPATH_W) '$(srcdir)/typestruct.cc'; fi`

parocpp-typeseqclass.o: typeseqclass.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-typeseqclass.o `test -f 'typeseqclass.cc' || echo '$(srcdir)/'`typeseqclass.cc

parocpp-typeseqclass.obj: typeseqclass.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-typeseqclass.obj `if test -f 'typeseqclass.cc'; then $(CYGPATH_W) 'typeseqclass.cc'; else $(CYGPATH_W) '$(srcdir)/typeseqclass.cc'; fi`

parocpp-debug.o: debug.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-debug.o `test -f 'debug.cc' || echo '$(srcdir)/'`debug.cc

parocpp-debug.obj: debug.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-debug.obj `if test -f 'debug.cc'; then $(CYGPATH_W) 'debug.cc'; else $(CYGPATH_W) '$(srcdir)/debug.cc'; fi`

parocpp-utils.o: utils.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-utils.o `test -f 'utils.cc' || echo '$(srcdir)/'`utils.cc

parocpp-utils.obj: utils.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(parocpp_CXXFLAGS) $(CXXFLAGS) -c -o parocpp-utils.obj `if test -f 'utils.cc'; then $(CYGPATH_W) 'utils.cc'; else $(CYGPATH_W) '$(srcdir)/utils.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am


gen: parser.y  parser.lex
	$(YACC) -b parser -d parser.y
	mv  parser.tab.c parser.tab.cc
	$(LEX) -oparser.yy.cc parser.lex
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
